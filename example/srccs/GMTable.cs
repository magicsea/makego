// Generated by g.f.com/flora/weiss/tabtoy
// Version: 0.0.0
// DO NOT EDIT!!
using System.Collections.Generic;
using tabtoy;

namespace Table
{

	public static partial class EnumAlias {
		
		public static string Name(this GMType e)
        {
            switch ((int)e)
            {
					
				case 0:
					return "道具";
				
            }
			return "";
		}
		
	}


	
	// Defined in table: GM
	public enum GMType
	{
		
		
		Item = 0, // 道具
	
	}
	
	

	// Defined in table: GMTable
	
	public partial class GMTable : ITable
    {
		
		/// <summary> 
		/// GM
		/// </summary>
		public List<GMDefine> GM = new List<GMDefine>(); // 
	
	
		#region Index code
	 	Dictionary<int, GMDefine> _GMByID = new Dictionary<int, GMDefine>();

        public GMDefine this[int key] => _GMByID[key];

        public GMDefine GetGMByID(int ID, GMDefine def = default(GMDefine))
        {
            GMDefine ret;
            if ( _GMByID.TryGetValue( ID, out ret ) )
            {
                return ret;
            }
			
			if ( def == default(GMDefine) )
			{
				
			}

            return def;
        }
		
		public string GetBuildID(){
			return "05652dce245050633ffb6464ad964981";
		}
        public string GetTableName()
		{
			return "GMTable";
		}
        #endregion
        #region Deserialize code

        static DeserializeHandler<GMTable> _GMTableDeserializeHandler;
		public static DeserializeHandler<GMTable> GMTableDeserializeHandler
		{
			get
			{
				if (_GMTableDeserializeHandler == null )
				{
					_GMTableDeserializeHandler = new DeserializeHandler<GMTable>(DeserializeGMTable);
				}

				return _GMTableDeserializeHandler;
			}
		}
		public static void DeserializeGMTable( GMTable ins, DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0xa0000:
                	{
						ins.GM.Add( reader.ReadStruct<GMDefine>(GMDefineDeserializeHandler) );
                	}
                	break; 
                }
             } 

			
			// Build GM Index
			for( int i = 0;i< ins.GM.Count;i++)
			{
				var element = ins.GM[i];
				
				ins._GMByID.Add(element.ID, element);
				
			}
			
		}
		static DeserializeHandler<GMDefine> _GMDefineDeserializeHandler;
		public static DeserializeHandler<GMDefine> GMDefineDeserializeHandler
		{
			get
			{
				if (_GMDefineDeserializeHandler == null )
				{
					_GMDefineDeserializeHandler = new DeserializeHandler<GMDefine>(DeserializeGMDefine);
				}

				return _GMDefineDeserializeHandler;
			}
		}
		public static void DeserializeGMDefine( GMDefine ins, DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0x10000:
                	{
						ins.ID = reader.ReadInt32();
                	}
                	break; 
                	case 0x60001:
                	{
						ins.Name = reader.ReadString();
                	}
                	break; 
                	case 0x80002:
                	{
						ins.GMType = reader.ReadEnum<GMType>();
                	}
                	break; 
                	case 0x60003:
                	{
						ins.Method = reader.ReadString();
                	}
                	break; 
                	case 0x60004:
                	{
						ins.RemindDesc = reader.ReadString();
                	}
                	break; 
                }
             } 

			
		}
		#endregion
		#region Clear Code
		public void Clear( )
		{			
				GM.Clear(); 
			
				_GMByID.Clear(); 
		}
		#endregion
	

	} 

	// Defined in table: GM
	[System.Serializable]
	public partial class GMDefine
	{
		
		/// <summary> 
		/// 唯一ID
		/// </summary>
		public int ID = 0; // 
		
		/// <summary> 
		/// 名字
		/// </summary>
		public string Name = ""; // 
		
		/// <summary> 
		/// GM的类型
		/// </summary>
		public GMType GMType = GMType.Item; // 
		
		/// <summary> 
		/// 方法名
		/// </summary>
		public string Method = ""; // 
		
		/// <summary> 
		/// 文字提醒
		/// </summary>
		public string RemindDesc = ""; // 
	
	

	} 

}
